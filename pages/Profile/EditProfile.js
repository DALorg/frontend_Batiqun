import { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux"
import Swal from "sweetalert2";
import "../components/GlobalVariable";
import {requireAuthentication} from "../requireAuthentication"
import Navsidebar from "../components/Navsidebar";
import { useRouter } from 'next/router';
import Cookies from 'js-cookie';
import { editUser, getUsers } from "../../redux/actions/userActions";
import axios from "axios";
import Head from "next/head";
import { Button } from "reactstrap";

const EditProfile = () => {
    const dispatch = useDispatch();
    const allProfileData = useSelector((state) => state.Users);
    const { loading, error, user } = allProfileData;

    const handleChangeEdit = (e) => {
      let data = { ...userEdit};
      data[e.target.name] = e.target.value;
      setUserEdit(data);
    };

    const handleFile = (e) => {
      let data = { ...userEdit };
      let file = e.target.files[0];
      data[e.target.name] = file;

      setUserEdit(data);
    };

    const router = useRouter()
    const {FullName, Email, NIK} = router.query;

    useEffect(() => {
      dispatch(editUser(Cookies.get('ethAddress'), Cookies.get('UserData'), FullName, Email, NIK));
    }, []);

    const [userEdit, setUserEdit] = useState({
      intUserId: user.enc_intUserId,
      txtFullName: user.txtFullName,
      txtPassword: user.txtPassword,
      txtEmail: user.txtEmail,
      Bio: user.Bio,
      Profile_Baner: user.Profile_Baner,
      Profile_Image: user.Profile_Image,
      NIK_Photo: user.NIK_Photo,
      TokenID: Cookies.get('ethAddress'),
      Twitter: user.Twitter,
      Instagram: user.Instagram,
      Website: user.Website,
      NIK: user.NIK,
    });

    const handleUpdate = (e) => {
      e.preventDefault();

      let file = userEdit.file;
      let formData = new FormData();
      formData.append('image', file);

      axios({
        url: global.apiurl + 'api/user/uploadfile',
        method: 'POST',
        data: formData
      }).then((res)=>{
        console.log(res.data.objData);

        dispatch(
          editUser({
            intUserId: userEdit.enc_intUserId,
            txtFullName: userEdit.txtFullName,
            txtPassword: userEdit.txtPassword,
            txtEmail: userEdit.txtEmail,
            Bio: userEdit.Bio,
            Profile_Baner: userEdit.Profile_Baner,
            Profile_Image: userEdit.Profile_Image,
            NIK_Photo: userEdit.NIK_Photo,
            TokenID: Cookies.get('ethAddress'),
            Twitter: userEdit.Twitter,
            Instagram: userEdit.Instagram,
            Website: userEdit.Website,
            NIK: userEdit.NIK,
          }, Cookies.get("UserData"))
        );
        Swal.fire(
          "Berhasil Update Profile!",
          "Profile " + userEdit.txtFullName + "Berhasil di Update",
          "success"
        );
      })

      setUserEdit({
        intUserId: "",
        txtFullName: "",
        txtPassword: "",
        txtEmail: "",
        Bio: "",
        Profile_Baner: "",
        Profile_Image: "",
        NIK_Photo:"",
        NIK:"",
        TokenID: Cookies.get('ethAddress'),
        Twitter: "",
        Instagram: "",
        Website: "",
      });
    };

    

    return (

        <div className="container-fluid py-4">
          <Head>
            <title>Edit Profile</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
        <Navsidebar></Navsidebar>

      <div className="container-fluid mt--6">
      <div className="row">
        <div className="col-lg-4">
            <div className="row justify-content-center">
              <h5 className="mb-0">Add Profile Picture</h5>
                  <img src="/curved11.jpg" alt="profile_pict" className="rounded-circle edit"/>
                  <input type="file" accept="image/*" name="image-upload" id="input" className="upload_pict"
                  // onChange={this.imageHandler} 
                  />
                  <div className="label">
                  <label className="image-upload" htmlFor="input">
                    <i className="material-icons">add_a_photo</i>
                    Choose profile picture
                  </label>
                  </div>
            </div>
            <div className="row justify-content-center">
              <h5 className="mb-0">Add Banner Picture</h5>
              <div className="card-profile">
                <img src="/header.jpg" alt="bannerPict" className="card-img-top" />
                <input type="file" accept="image/*" name="image-upload" className="upload_pict"
                // onChange={}
                />
                <div className="label1">
                  <label className="image-upload" htmlFor="input">
                    <i className="material-icons">add_a_photo</i>
                    Choose profile picture
                  </label>
                  </div>
              </div>
            </div>
        </div>

        <div className="col-lg-8">
          <div className="card">
            <div className="card-header">
              <div className="row align-items-center">
                <div className="col-8">
                  <h3 className="mb-0">Edit profile </h3>
                </div>
                
              </div>
            </div>

            <div className="card-body">
              <form>
                <h6 className="heading-small text-muted mb-4">User information</h6>
                <div className="pl-lg-4">
                    <div className="col-lg-6">
                      <div className="form-group" style={{ display: "none" }}>
                        <input
                        type="input"
                        className="form-control"
                        placeholder="id"
                        name="id" disabled
                        value={userEdit.enc_intUserId}
                      />
                      </div>
                    </div>
                  <div className="row">
                    <div className="col-lg-6">
                      <div className="form-group">
                      <label className="form-control-label" for="input-full-name">Fullname</label>
                        <input
                        type="input"
                        className="form-control"
                        placeholder= {user.txtFullName}
                        name="fullname" required
                        onChange={handleChangeEdit}
                        value={userEdit.txtFullName}
                      />
                      </div>
                    </div>
                    <div className="col-lg-6">
                      <div className="form-group">
                        <label className="form-control-label" for="input-email">Email Address</label>
                        <input
                        type="email"
                        className="form-control"
                        placeholder="enter your email"
                        name="email" required
                        onChange={handleChangeEdit}
                        value={user.txtEmail}
                      />
                      </div>
                    </div>
                  </div>
                  <div className="row">
                    <div className="col-lg-6">
                      <div className="form-group">
                        <label className="form-control-label" for="input-Password">Password</label>
                        <input
                        type="password"
                        className="form-control"
                        placeholder="enter password"
                        name="password" required
                        onChange={handleChangeEdit}
                        value={user.txtPassword}
                      />
                      </div>
                    </div> 
                    <div className="col-lg-6">
                      <div className="form-group">
                        <label className="form-control-label" 
                        for="input-tokenID">Eth Address</label>
                        <input
                        type="input"
                        className="form-control"
                        name="token ID"
                        onChange={handleChangeEdit}
                        value={user.ethAddress}
                        disabled
                      />
                      </div>
                    </div>
                  </div>
                  <div className="row">
                    <div className="col-lg-6">
                      <div className="form-group">
                        <label className="form-control-label" 
                        for="input-KTP">Upload KTP</label>
                        <input
                        type="file"
                        className="form-control"
                        placeholder="choose file"
                        name="KTP"
                        onChange={handleFile}
                        required
                      />
                      </div>
                    </div>
                    <div className="col-lg-6">
                      <div className="form-group">
                        <label className="form-control-label" for="input-NIK">NIK/Induk kependudukan</label>
                        <input
                        type="number"
                        className="form-control"
                        placeholder="enter your id number"
                        name="email" required
                        minLength="16"
                        onChange={handleChangeEdit}
                        value={user.NIK}
                      />
                      </div>
                    </div>
                  </div>
                </div>
                <hr className="my-4" />
                {/* <!-- Address --> */}
                <h6 className="heading-small text-muted mb-4">Contact information</h6>
                <div className="pl-lg-4">
                  
                  <div className="row">
                    <div className="col-lg-4">
                      <div className="form-group">
                        <label className="form-control-label" for="input-twitter">Twitter</label>
                        <input
                        type="input"
                        className="form-control"
                        placeholder="@example"
                        name="twitter" 
                        onChange={handleChangeEdit}
                        value={user.Twitter}
                      />
                      </div>
                    </div>
                    <div className="col-lg-4">
                      <div className="form-group">
                        <label className="form-control-label" for="input-instagram">Instagram</label>
                        <input
                        type="input"
                        className="form-control"
                        placeholder="@example"
                        name="instagram"
                        onChange={handleChangeEdit}
                        value={user.Instagram}
                      />
                      </div>
                    </div>
                    <div className="col-lg-4">
                      <div className="form-group">
                        <label className="form-control-label" for="input-website">Website</label>
                        <input
                        type="input"
                        className="form-control"
                        placeholder="www@example.id"
                        name="website"
                        onChange={handleChangeEdit}
                        value={user.Website}
                      />
                      </div>
                    </div>
                  </div>
                </div>
                {/* <hr className="my-4" />
                <h6 className="heading-small text-muted mb-4">About me</h6> */}
                <div className="pl-lg-4">
                  <div className="form-group">
                    <label className="form-control-label">About me</label>
                    <textarea
                        type="input"
                        className="form-control"
                        placeholder="write about you"
                        name="bio" required
                        onChange={handleChangeEdit}
                        value={userEdit.Bio}
                      />
                  </div>
                </div>
                
                <Button onClick={handleUpdate} color="primary" type="button">
                    Save changes
                </Button>

              </form>
            </div>
          </div>
        </div>
      </div>
      </div>
      </div>
        )
    }

    export default EditProfile;

    export const getServerSideProps = requireAuthentication(context => {
      return {props: {}}
  })