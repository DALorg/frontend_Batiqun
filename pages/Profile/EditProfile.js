import { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux"
import Swal from "sweetalert2";
import "../components/GlobalVariable";
import {requireAuthentication} from "../requireAuthentication"
import Navsidebar from "../components/Navsidebar";
import { useRouter } from 'next/router';
import Cookies from 'js-cookie';
import { getUsers } from "../../redux/actions/userActions";

const EditProfile = () => {
    const dispatch = useDispatch();
    const allProfileData = useSelector((state) => state.Users);
    const { loading, error, user } = allProfileData;

    const handleChange = (e) => {
      let data = { ...userEdit};
      data[e.target.name] = e.target.value;
      setUserEdit(data);
    };

    const handleFile = (e) => {
      let data = { ...userEdit };
      let file = e.target.files[0];
      data[e.target.name] = file;

      setUserEdit(data);
    };

    const router = useRouter()
    // const {pid} = router.query;

    useEffect(() => {
      dispatch(getUsers(Cookies.get('ethAddress'), Cookies.get('UserData')));
    }, []);

    const [userEdit, setUserEdit] = useState({
      // intUserId: user.enc_intUserId,
      txtFullName: user.txtFullName,
      txtPassword: user.txtPassword,
      txtEmail: user.txtEmail,
      Bio: user.Bio,
      Profile_Baner: user.Profile_Baner,
      Profile_Image: user.Profile_Image,
      NIK_Photo: user.NIK_Photo,
      TokenID: Cookies.get('ethAddress'),
      Twitter: user.Twitter,
      Instagram: user.Instagram,
      Website: user.Website,
      NIK: user.NIK,
    });

    return (
        <div className="container-fluid py-4">
        <title>Edit Profile</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/icon.png" />
        {/* <Layout></Layout> */}
        <Navsidebar></Navsidebar>
      
      <div className="container-fluid mt--6">
      <div className="row">
        <div className="col-lg-4">
          <div className="card card-profile">
            <img src="/header.jpg" alt="Image placeholder" className="card-img-top"/>
            <div className="row justify-content-center">
              <div className="col-lg-3 order-lg-2">
                <div className="card-profile-image">
                  <a href="#">
                    <img src="/man.png" className="rounded-circle"/>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div className="col-lg-8">
          <div className="card">
            <div className="card-header">
              <div className="row align-items-center">
                <div className="col-8">
                  <h3 className="mb-0">Edit profile </h3>
                </div>
                
              </div>
            </div>
            <div className="card-body">
              <form>
                <h6 className="heading-small text-muted mb-4">User information</h6>
                <div className="pl-lg-4">
                  <div className="row">
                    <div className="col-lg-6">
                      <div className="form-group">
                      <label className="form-control-label" for="input-full-name">Fullname</label>
                        <input
                        type="input"
                        className="form-control"
                        placeholder="enter your name"
                        name="fullname" required
                        onChange={handleChange}
                        value={user.txtFullName}
                        
                      />
                      </div>
                    </div>
                    <div className="col-lg-6">
                      <div className="form-group">
                        <label className="form-control-label" for="input-email">Email Address</label>
                        <input
                        type="email"
                        className="form-control"
                        placeholder="enter your email"
                        name="email" required
                        // onChange={handleChange}
                        // value={userInput.txtEmail}
                      />
                      </div>
                    </div>
                  </div>
                  <div className="row">
                    <div className="col-lg-6">
                      <div className="form-group">
                        <label className="form-control-label" for="input-Password">Password</label>
                        <input
                        type="password"
                        className="form-control"
                        placeholder="enter password"
                        name="password" required
                        onChange={handleChange}
                        // value={userInput.txtPassword}
                      />
                      </div>
                    </div> 
                    <div className="col-lg-6">
                      <div className="form-group">
                        <label className="form-control-label" for="input-tokenID">Eth Address</label>
                        <input
                        type="input"
                        className="form-control"
                        // placeholder={user.TokenID}
                        name="token ID"
                        onChange={handleChange}
                        value={user.TokenId}
                        disabled
                      />
                      </div>
                    </div>
                  </div>
                  <div className="row">
                    <div className="col-lg-6">
                      <div className="form-group">
                        <label className="form-control-label" for="input-KTP">Upload KTP</label>
                        <input
                        type="file"
                        className="form-control"
                        placeholder="choose file"
                        name="KTP"
                        onChange={handleChange}
                        // value={userInput.NIK_photo}
                        required
                      />
                      </div>
                    </div>
                    <div className="col-lg-6">
                      <div className="form-group">
                        <label className="form-control-label" for="input-NIK">NIK/Induk kependudukan</label>
                        <input
                        type="number"
                        className="form-control"
                        placeholder="enter your id number"
                        name="email" required
                        minLength="16"
                        onChange={handleChange}
                        // value={userInput.NIK}
                      />
                      </div>
                    </div>
                  </div>
                </div>
                <hr className="my-4" />
                {/* <!-- Address --> */}
                <h6 className="heading-small text-muted mb-4">Contact information</h6>
                <div className="pl-lg-4">
                  
                  <div className="row">
                    <div className="col-lg-4">
                      <div className="form-group">
                        <label className="form-control-label" for="input-twitter">Twitter</label>
                        <input
                        type="input"
                        className="form-control"
                        placeholder="@example"
                        name="twitter" 
                        onChange={handleChange}
                        // value={userInput.Twitter}
                      />
                      </div>
                    </div>
                    <div className="col-lg-4">
                      <div className="form-group">
                        <label className="form-control-label" for="input-instagram">Instagram</label>
                        <input
                        type="input"
                        className="form-control"
                        placeholder="@example"
                        name="instagram"
                        onChange={handleChange}
                        // value={userInput.Instagram}
                      />
                      </div>
                    </div>
                    <div className="col-lg-4">
                      <div className="form-group">
                        <label className="form-control-label" for="input-website">Website</label>
                        <input
                        type="input"
                        className="form-control"
                        placeholder="www@example.id"
                        name="website"
                        onChange={handleChange}
                        // value={userInput.Website}
                      />
                      </div>
                    </div>
                  </div>
                </div>
                {/* <hr className="my-4" />
                <h6 className="heading-small text-muted mb-4">About me</h6> */}
                <div className="pl-lg-4">
                  <div className="form-group">
                    <label className="form-control-label">About me</label>
                    <textarea
                        type="input"
                        className="form-control"
                        placeholder="write about you"
                        name="bio" required
                        onChange={handleChange}
                        // value={userInput.Bio}
                      />
                  </div>
                </div>
                <div className="pl-lg-4">
                    <button
                      className="bn54"
                      type="button"
                      // onClick={handleSubmit} 
                      >
                      <span className="bn54span">Submit</span>
                    </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      </div>
      </div>
        )
    }

    export default EditProfile;

    export const getServerSideProps = requireAuthentication(context => {
      return {props: {}}
  })